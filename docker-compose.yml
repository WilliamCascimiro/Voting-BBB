version: '3.8'

services:
  bbb-api:
    #container_name: bbb_api
    build:
      context: .
      dockerfile: ./voting-api/Voting.API/Dockerfile
    # deploy:
    #   mode: replicated
    #   replicas: 3
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    ports:
      - "8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    depends_on:
      - bbb-sqlserver

  bbb-sqlserver:
    container_name: bbb-sqlserver
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=Password1*
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql

  redis:
    image: redis
    command: redis-server
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    container_name: rabbitmq
    labels:
      NAME: "rabbitmq"
    ports:
      - "5672:5672"
      - "15672:15672"

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./voting-api/Nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./voting-api/Nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - bbb-api

  sonar:
    image: sonarqube:latest
    container_name: sonar
    ports:
      - "9000:9000"
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonar-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - sonar-db

  sonar-db:
    image: postgres:latest
    container_name: sonar-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db_data:/var/lib/postgresql/data

volumes:
  sqlserver_data:
  sonarqube_db_data: